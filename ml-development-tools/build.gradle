plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '0.10.0'
    id 'org.jetbrains.kotlin.jvm'  version '1.2.51'
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven-publish'

//group   'com.marklogic'
//version '4.1'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    jcenter()
    mavenCentral()
    maven { url 'http://developer.marklogic.com/maven2' }
}

dependencies {
    compileOnly gradleApi()
    compile project (':marklogic-client-api')
    compile ('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.51')
    compile ('com.fasterxml.jackson.module:jackson-module-kotlin:2.9.3')
    testCompileOnly gradleTestKit()
}

task mlDevelopmentToolsPlugin(type: Jar) {
    baseName = 'ml-development-tools'
}

publishing {
    publications {
        main(MavenPublication) {
            artifact mlDevelopmentToolsPlugin
        }
    }
}

pluginBundle {
    website = 'https://github.com/marklogic/java-client-api'
    vcsUrl = 'git@github.com:marklogic/java-client-api.git'
    plugins {
        mlDevelopmentToolsPlugin {
            id = 'com.marklogic.ml-development-tools'
            displayName = 'ml-development-tools MarkLogic Data Service Tools'
            description = 'ml-development-tools plugin for developing data services on MarkLogic'
            tags = ['marklogic', 'development tools', 'data services']
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

task setupTestServer(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.marklogic.client.test.dbfunction.FntestconfKt'
    args = [ 'setup' ]
}
task generateTests(type: JavaExec) {
    dependsOn setupTestServer
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.marklogic.client.test.dbfunction.FntestgenKt'
    args = [ './src/test/' ]
}
task teardownTestServer(type: JavaExec) {
    dependsOn test
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.marklogic.client.test.dbfunction.FntestconfKt'
    args = [ 'teardown' ]
}
